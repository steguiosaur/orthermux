#!/bin/bash
packages=("root-repo x11-repo python python2 wget curl clang zsh fish zip unzip vim neovim tmux nano ctags exa")

function updateUpgradePackages() {
    while true; do
        read -r -p "[termux-dotfiles] update and upgrade packages? [Y/N] " ans
        case $ans in
            Y | y )
                pkg update -y && pkg upgrade -y;
                break;;
            N | n ) break;;
            * ) echo -e "\n[error] accepted values [Y/N/y/n]";;
        esac
    done
}

function doPkgAndConfInstall() {
    # install required packages
    pkg install $packages -y

    # create backups for changes
    mv $HOME/.zshrc $HOME/.zshrc.bak
    mv $HOME/.bashrc $HOME/.bashrc.bak
    mv $HOME/.gitconfig $HOME/.gitconfig.bak
    mv $HOME/.config/fish/config.fish $HOME/.config/fish/config.fish.bak
    mv $HOME/.config/tmux/tmux.conf $HOME/.config/tmux/tmux.conf.bak

    # copy termux-dotfiles to config files
    cp -r ./asciinema/ ./fish/ ./tmux/ $HOME/.config/

    # remove termux default prompt
    if [ -f "$PREFIX/etc/motd" ]; then
        rm $PREFIX/etc/motd
    fi

    # copy other configs to $HOME
    cp bashrc $HOME/.bashrc
    cp zshrc $HOME/.zshrc
    cp gitconfig $HOME/.gitconfig
    cp ./termux/* $HOME/.termux
    cp gdbinit $HOME/.gdbinit

    # set sh default to fish
    chsh -s fish
}

function main() {
    updateUpgradePackages
    while true; do
        read -r -p "[termux-dotfiles] proceed install? [Y/N] " ans
        case $ans in
            Y | y ) doPkgAndConfInstall
                break;;
            N | n ) break;;
            * ) echo -e "\n[error] accepted values [Y/N/y/n]";;
        esac
    done
}

main
